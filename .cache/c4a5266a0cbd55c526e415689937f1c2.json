{"dependencies":[{"name":"../api/blob","loc":{"line":18,"column":21}},{"name":"../api/database","loc":{"line":19,"column":25}},{"name":"../api/field_path","loc":{"line":20,"column":27}},{"name":"../api/field_value","loc":{"line":21,"column":28}},{"name":"../api/geo_point","loc":{"line":22,"column":26}},{"name":"../util/obj","loc":{"line":23,"column":20}}],"generated":{"js":"\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar blob_1 = require(\"../api/blob\");\nvar database_1 = require(\"../api/database\");\nvar field_path_1 = require(\"../api/field_path\");\nvar field_value_1 = require(\"../api/field_value\");\nvar geo_point_1 = require(\"../api/geo_point\");\nvar obj_1 = require(\"../util/obj\");\nvar firestoreNamespace = {\n    Firestore: database_1.PublicFirestore,\n    GeoPoint: geo_point_1.GeoPoint,\n    Blob: blob_1.PublicBlob,\n    Transaction: database_1.PublicTransaction,\n    WriteBatch: database_1.PublicWriteBatch,\n    DocumentReference: database_1.PublicDocumentReference,\n    DocumentSnapshot: database_1.PublicDocumentSnapshot,\n    Query: database_1.PublicQuery,\n    QuerySnapshot: database_1.PublicQuerySnapshot,\n    CollectionReference: database_1.PublicCollectionReference,\n    FieldPath: field_path_1.FieldPath,\n    FieldValue: field_value_1.PublicFieldValue,\n    setLogLevel: database_1.Firestore.setLogLevel\n};\n/**\n * Configures Firestore as part of the Firebase SDK by calling registerService.\n */\nfunction configureForFirebase(firebase) {\n    firebase.INTERNAL.registerService('firestore', function (app) { return new database_1.Firestore(app); }, obj_1.shallowCopy(firestoreNamespace));\n}\nexports.configureForFirebase = configureForFirebase;\n/**\n * Exports the Firestore namespace into the provided `exportObject` object under\n * the key 'firestore'. This is used for wrapped binary that exposes Firestore\n * as a goog module.\n */\nfunction configureForStandalone(exportObject) {\n    var copiedNamespace = obj_1.shallowCopy(firestoreNamespace);\n    // Unlike the use with Firebase, the standalone allows the use of the\n    // constructor, so export it's internal class\n    copiedNamespace['Firestore'] = database_1.Firestore;\n    exportObject['firestore'] = copiedNamespace;\n}\nexports.configureForStandalone = configureForStandalone;\n\n//# sourceMappingURL=config.js.map\n"},"hash":"8ccdddbbe591ea65b680caf465683f32"}