{"dependencies":[{"name":"./curry.js","loc":{"line":3,"column":33}},{"name":"./buffer.js","loc":{"line":4,"column":33}},{"name":"./pervasives.js","loc":{"line":5,"column":33}},{"name":"./camlinternalFormat.js","loc":{"line":6,"column":33}}],"generated":{"js":"\n'use strict';\n\nvar Curry              = require(\"./curry.js\");\nvar Buffer             = require(\"./buffer.js\");\nvar Pervasives         = require(\"./pervasives.js\");\nvar CamlinternalFormat = require(\"./camlinternalFormat.js\");\n\nfunction kfprintf(k, o, param) {\n  return CamlinternalFormat.make_printf((function (o, acc) {\n                CamlinternalFormat.output_acc(o, acc);\n                return Curry._1(k, o);\n              }), o, /* End_of_acc */0, param[0]);\n}\n\nfunction kbprintf(k, b, param) {\n  return CamlinternalFormat.make_printf((function (b, acc) {\n                CamlinternalFormat.bufput_acc(b, acc);\n                return Curry._1(k, b);\n              }), b, /* End_of_acc */0, param[0]);\n}\n\nfunction ikfprintf(k, oc, param) {\n  return CamlinternalFormat.make_printf((function (oc, _) {\n                return Curry._1(k, oc);\n              }), oc, /* End_of_acc */0, param[0]);\n}\n\nfunction fprintf(oc, fmt) {\n  return kfprintf((function () {\n                return /* () */0;\n              }), oc, fmt);\n}\n\nfunction bprintf(b, fmt) {\n  return kbprintf((function () {\n                return /* () */0;\n              }), b, fmt);\n}\n\nfunction ifprintf(oc, fmt) {\n  return ikfprintf((function () {\n                return /* () */0;\n              }), oc, fmt);\n}\n\nfunction printf(fmt) {\n  return fprintf(Pervasives.stdout, fmt);\n}\n\nfunction eprintf(fmt) {\n  return fprintf(Pervasives.stderr, fmt);\n}\n\nfunction ksprintf(k, param) {\n  var k$prime = function (_, acc) {\n    var buf = Buffer.create(64);\n    CamlinternalFormat.strput_acc(buf, acc);\n    return Curry._1(k, Buffer.contents(buf));\n  };\n  return CamlinternalFormat.make_printf(k$prime, /* () */0, /* End_of_acc */0, param[0]);\n}\n\nfunction sprintf(fmt) {\n  return ksprintf((function (s) {\n                return s;\n              }), fmt);\n}\n\nvar kprintf = ksprintf;\n\nexports.fprintf   = fprintf;\nexports.printf    = printf;\nexports.eprintf   = eprintf;\nexports.sprintf   = sprintf;\nexports.bprintf   = bprintf;\nexports.ifprintf  = ifprintf;\nexports.kfprintf  = kfprintf;\nexports.ikfprintf = ikfprintf;\nexports.ksprintf  = ksprintf;\nexports.kbprintf  = kbprintf;\nexports.kprintf   = kprintf;\n/* No side effect */\n"},"hash":"131783da17073a2310efc9072dd905c5"}