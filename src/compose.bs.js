// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Block                    = require("bs-platform/lib/js/block.js");
var Curry                    = require("bs-platform/lib/js/curry.js");
var ReasonReact              = require("reason-react/src/ReasonReact.js");
var Models$ReactTemplate     = require("./models.bs.js");
var Firebase$ReactTemplate   = require("./Firebase.bs.js");
var BaseUtils$ReactTemplate  = require("./baseUtils.bs.js");
var EditRecipe$ReactTemplate = require("./editRecipe.bs.js");

var component = ReasonReact.reducerComponent("Compose");

function make(fb, uid, _) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (param) {
      var reduce = param[/* reduce */1];
      var id = Curry._1(BaseUtils$ReactTemplate.uuid, /* () */0);
      return ReasonReact.element(/* None */0, /* None */0, EditRecipe$ReactTemplate.make(+(param[/* state */2] === /* Saving */0), Models$ReactTemplate.Recipe[/* blank */1](id, uid), (function (recipe) {
                        Curry._1(reduce, (function () {
                                return /* Saving */0;
                              }));
                        var FB = Firebase$ReactTemplate.Collection([Models$ReactTemplate.Recipe[0]]);
                        var collection = Curry._1(FB[/* get */0], fb);
                        var doc = collection.doc(recipe.id);
                        console.log("Saving", recipe);
                        doc.set(recipe).then((function () {
                                  return Promise.resolve(/* () */0);
                                })).catch((function (err) {
                                console.log(err);
                                return Promise.resolve(/* () */0);
                              }));
                        return /* () */0;
                      }), /* array */[]));
    });
  newrecord[/* initialState */10] = (function () {
      return /* Editing */1;
    });
  newrecord[/* reducer */12] = (function (action, _) {
      return /* Update */Block.__(0, [action]);
    });
  return newrecord;
}

exports.component = component;
exports.make      = make;
/* component Not a pure module */
